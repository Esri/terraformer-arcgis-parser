!function(a,b){"object"==typeof module&&"object"==typeof module.exports&&(exports=module.exports=b()),"function"==typeof define&&define.amd&&define(["terraformer/terraformer"],b),"object"==typeof a.navigator&&("undefined"==typeof a.Terraformer&&(a.Terraformer={}),a.Terraformer.ArcGIS=b())}(this,function(){function a(a){var b,c=0,d=0,e=a.length,f=a[d];for(d;e-1>d;d++)b=a[d+1],c+=(b[0]-f[0])*(b[1]+f[1]),f=b;return c>=0}function b(b){var c=[],d=b.shift();a(d)||d.reverse(),c.push(d);for(var e=0;e<b.length;e++){var f=b[e];a(f)&&d.reverse(),c.push(b[e])}return c}function c(a){for(var c=[],d=0;d<a.length;d++){for(var e=b(a[d]),f=e.length-1;f>=0;f--){var g=e[f];c.push(g)}c.push()}return c}function d(a,b){var c=h.Tools.arrayIntersectsArray(a,b),d=h.Tools.coordinatesContainPoint(a,b[0]);return!c&&d?!0:!1}function e(b){for(var c=[],e=[],f=0;f<b.length;f++){var g=b[f];if(a(g)){var h=[g];c.push(h)}else e.push(g)}for(;e.length;){for(var i=e.pop(),j=!1,k=c.length-1;k>=0;k--){var l=c[k][0];if(d(l,i)){c[k].push(i),j=!0;break}}j||c.push([i.reverse()])}return 1===c.length?{type:"Polygon",coordinates:c[0]}:{type:"MultiPolygon",coordinates:c}}function f(a){var b=JSON.parse(JSON.stringify(a)),c={};b.x&&b.y&&(c.type="Point",c.coordinates=[b.x,b.y]),b.points&&(c.type="MultiPoint",c.coordinates=b.points),b.paths&&(1===b.paths.length?(c.type="LineString",c.coordinates=b.paths[0]):(c.type="MultiLineString",c.coordinates=b.paths)),b.rings&&(c=e(b.rings)),b.geometry&&(c.type="Feature",c.geometry=f(b.geometry),c.properties=b.attributes||{});var d=b.geometry?b.geometry.spatialReference:b.spatialReference;return d&&102100===d.wkid&&(c=h.toGeographic(c)),new h.Primitive(c)}function g(a,d){var e,f=JSON.parse(JSON.stringify(a));e=d?d:f.crs===h.MercatorCRS?{wkid:102100}:{wkid:4326};var i,j={};switch(f.type){case"Point":j.x=f.coordinates[0],j.y=f.coordinates[1],j.spatialReference=e;break;case"MultiPoint":j.points=f.coordinates,j.spatialReference=e;break;case"LineString":j.paths=[f.coordinates],j.spatialReference=e;break;case"MultiLineString":j.paths=f.coordinates,j.spatialReference=e;break;case"Polygon":j.rings=b(f.coordinates),j.spatialReference=e;break;case"MultiPolygon":j.rings=c(f.coordinates),j.spatialReference=e;break;case"Feature":j.geometry=g(f.geometry),j.attributes=f.properties;break;case"FeatureCollection":for(j=[],i=0;i<f.features.length;i++)j.push(g(f.features[i]));break;case"GeometryCollection":for(j=[],i=0;i<f.geometries.length;i++)j.push(g(f.geometries[i]))}return j}var h,i={};return"object"==typeof this.navigator&&(h=this.Terraformer),"object"==typeof module&&"object"==typeof module.exports&&(h=require("terraformer")),arguments[0]&&"function"==typeof define&&define.amd&&(h=arguments[0]),i.parse=f,i.convert=g,i.toGeoJSON=f,i.fromGeoJSON=g,i});